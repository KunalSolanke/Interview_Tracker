[{"/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/index.js":"1","/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/App.js":"2","/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/pages/auth/Login.jsx":"3","/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/components/Card/Card.jsx":"4","/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/pages/homepage/Home.jsx":"5","/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/components/input/Input.jsx":"6","/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/components/button/Button.jsx":"7","/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/components/Registration/Registration.jsx":"8","/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/components/Registration/RegistrationStyles.js":"9","/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/store/index.js":"10","/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/store/reducers/auth.js":"11","/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/store/UpdateObj.js":"12","/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/store/constants/auth.js":"13","/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/store/actions/auth.js":"14"},{"size":324,"mtime":1611170789215,"results":"15","hashOfConfig":"16"},{"size":1636,"mtime":1611166493756,"results":"17","hashOfConfig":"16"},{"size":812,"mtime":1610665166345,"results":"18","hashOfConfig":"16"},{"size":1158,"mtime":1611164481431,"results":"19","hashOfConfig":"16"},{"size":1808,"mtime":1610665166345,"results":"20","hashOfConfig":"16"},{"size":648,"mtime":1610665166345,"results":"21","hashOfConfig":"16"},{"size":274,"mtime":1610665166345,"results":"22","hashOfConfig":"16"},{"size":8006,"mtime":1611170515856,"results":"23","hashOfConfig":"16"},{"size":3676,"mtime":1611165704223,"results":"24","hashOfConfig":"16"},{"size":465,"mtime":1611170948741,"results":"25","hashOfConfig":"16"},{"size":1190,"mtime":1611170829988,"results":"26","hashOfConfig":"16"},{"size":104,"mtime":1611169134279,"results":"27","hashOfConfig":"16"},{"size":161,"mtime":1611170475408,"results":"28","hashOfConfig":"16"},{"size":1636,"mtime":1611170549716,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17s4vna",{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"36"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},"/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/index.js",[],"/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/App.js",["63","64"],"/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/pages/auth/Login.jsx",[],["65","66"],"/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/components/Card/Card.jsx",["67","68"],"import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport {useEffect} from 'react'\nimport './Card.css'\n\nconst useStyles = makeStyles({\n  root: {\n    minWidth: 275,\n    maxWidth: 400,\n    backgroundColor:'#D1D5DB',\n    height: '128px'\n  },\n  bullet: {\n    display: 'inline-block',\n    margin: '0 2px',\n    transform: 'scale(0.8)',\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function SimpleCard({topic}) {\n  const classes = useStyles();\n  const bull = <span className={classes.bullet}>â€¢</span>;\n  return (\n    <Card className={classes.root}>\n      <CardContent>\n        <Typography className={classes.title} color=\"textSecondary\" gutterBottom>\n            {topic}\n        </Typography>\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">Click Here</Button>\n      </CardActions>\n    </Card>\n  );\n}\n","/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/pages/homepage/Home.jsx",["69"],"import React from 'react'\n\nexport default function Home() {\n    return (\n        <React.Fragment>\n            <header class=\"text-gray-700 body-font\">\n    <div class=\"container mx-auto flex flex-wrap p-5 flex-col md:flex-row items-center\">\n        <a class=\"flex title-font font-medium items-center text-gray-900 mb-4 md:mb-0\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\"\n                stroke-linejoin=\"round\" stroke-width=\"2\" class=\"w-10 h-10 text-white p-2 bg-indigo-500 rounded-full\"\n                viewBox=\"0 0 24 24\">\n                <path d=\"M12 2L2 7l10 5 10-5-10-5zM2 17l10 5 10-5M2 12l10 5 10-5\"></path>\n            </svg>\n            <span class=\"ml-3 text-xl\">Interview Tracker</span>\n        </a>\n        <nav class=\"md:ml-auto flex flex-wrap items-center text-base justify-center\">\n            <a class=\"mr-5 hover:text-gray-900\" href=\"/problems\">Problems</a>\n            <a class=\"mr-5 hover:text-gray-900\" href=\"/problems/topics\">Topics</a>\n            <a class=\"mr-5 hover:text-gray-900\" href=\"/interviews/\">Interviews</a>\n            <a class=\"mr-5 hover:text-gray-900\" href=\"/accounts/login\">Login</a>\n\n\n            \n        </nav>\n            <a class=\"mr-5 hover:text-gray-900\" href=\"/accounts/signup\">\n        <button\n            class=\"inline-flex items-center bg-gray-200 border-0 py-1 px-3 focus:outline-none hover:bg-gray-300 rounded text-base mt-4 md:mt-0\">\n           SignUp\n            <svg fill=\"none\" stroke=\"currentColor\" stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\"\n                class=\"w-4 h-4 ml-1\" viewBox=\"0 0 24 24\">\n                <path d=\"M5 12h14M12 5l7 7-7 7\"></path>\n            </svg>\n        </button>\n            </a>\n    </div>\n</header>\n        </React.Fragment>\n    )\n}\n","/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/components/input/Input.jsx",[],"/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/components/button/Button.jsx",[],"/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/components/Registration/Registration.jsx",["70"],"import React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { register } from \"./RegistrationStyles\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { FormControl, Input, InputLabel, Button } from \"@material-ui/core\";\nimport PeopleAltIcon from \"@material-ui/icons/PeopleAlt\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport VisibilityTwoToneIcon from \"@material-ui/icons/VisibilityTwoTone\";\nimport VisibilityOffTwoToneIcon from \"@material-ui/icons/VisibilityOffTwoTone\";\nimport axios from 'axios'\nimport {connect} from 'react-redux'\nimport {authRegister} from '../../store/actions/auth'\n\n\n\nclass Registration extends Component {\n  state = {\n    username:\"\",\n    email: \"\",\n    password: \"\",\n    passwordConfrim: \"\",\n    hidePassword: true,\n    error: null,\n    errorOpen: false\n  };\n\n  errorClose = e => {\n    this.setState({\n      errorOpen: false\n    });\n  };\n\n  handleChange = name => e => {\n    this.setState({\n      [name]: e.target.value\n    });\n  };\n\n  passwordMatch = () => this.state.password === this.state.passwordConfrim;\n\n  showPassword = () => {\n    this.setState(prevState => ({ hidePassword: !prevState.hidePassword }));\n  };\n\n  isValid = () => {\n    if (this.state.email === \"\") {\n      return false;\n    }\n    return true;\n  };\n  submitRegistration = async (e) => {\n    e.preventDefault();\n    if (!this.passwordMatch()) {\n      this.setState({\n        errorOpen: true,\n        error: \"Passwords don't match\"\n      });\n    }\n    const newUserCredentials = {\n      username:this.state.username,\n      email: this.state.email,\n      password: this.state.password,\n      passwordConfrim: this.state.passwordConfrim\n    };\n    console.log(\"this.props.newUserCredentials\", newUserCredentials);\n    //dispath to userActions\n    const {username,email,password} = this.state\n    try{\n       const {RegisterUser} = this.props\n       RegisterUser({username,email,password})\n    }\n    catch(err){\n        console.log(err.message)\n    }\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.main}>\n        <CssBaseline />\n\n        <Paper className={classes.paper}>\n          <Avatar className={classes.avatar}>\n            <PeopleAltIcon className={classes.icon} />\n          </Avatar>\n          <form\n            className={classes.form}\n            onSubmit={() => this.submitRegistration}\n          >\n              <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"email\" className={classes.labels}>\n                Username\n              </InputLabel>\n              <Input\n                name=\"username\"\n                type=\"text\"\n                className={classes.inputs}\n                disableUnderline={true}\n                onChange={this.handleChange(\"username\")}\n              />\n            </FormControl>\n\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"email\" className={classes.labels}>\n                e-mail\n              </InputLabel>\n              <Input\n                name=\"email\"\n                type=\"email\"\n                autoComplete=\"email\"\n                className={classes.inputs}\n                disableUnderline={true}\n                onChange={this.handleChange(\"email\")}\n              />\n            </FormControl>\n\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"password\" className={classes.labels}>\n                password\n              </InputLabel>\n              <Input\n                name=\"password\"\n                autoComplete=\"password\"\n                className={classes.inputs}\n                disableUnderline={true}\n                onChange={this.handleChange(\"password\")}\n                type={this.state.hidePassword ? \"password\" : \"input\"}\n                endAdornment={\n                  this.state.hidePassword ? (\n                    <InputAdornment position=\"end\">\n                      <VisibilityOffTwoToneIcon\n                        fontSize=\"default\"\n                        className={classes.passwordEye}\n                        onClick={this.showPassword}\n                      />\n                    </InputAdornment>\n                  ) : (\n                    <InputAdornment position=\"end\">\n                      <VisibilityTwoToneIcon\n                        fontSize=\"default\"\n                        className={classes.passwordEye}\n                        onClick={this.showPassword}\n                      />\n                    </InputAdornment>\n                  )\n                }\n              />\n            </FormControl>\n\n            <FormControl required fullWidth margin=\"normal\">\n              <InputLabel htmlFor=\"passwordConfrim\" className={classes.labels}>\n                confrim password\n              </InputLabel>\n              <Input\n                name=\"passwordConfrim\"\n                autoComplete=\"passwordConfrim\"\n                className={classes.inputs}\n                disableUnderline={true}\n                onClick={this.state.showPassword}\n                onChange={this.handleChange(\"passwordConfrim\")}\n                type={this.state.hidePassword ? \"password\" : \"input\"}\n                endAdornment={\n                  this.state.hidePassword ? (\n                    <InputAdornment position=\"end\">\n                      <VisibilityOffTwoToneIcon\n                        fontSize=\"default\"\n                        className={classes.passwordEye}\n                        onClick={this.showPassword}\n                      />\n                    </InputAdornment>\n                  ) : (\n                    <InputAdornment position=\"end\">\n                      <VisibilityTwoToneIcon\n                        fontSize=\"default\"\n                        className={classes.passwordEye}\n                        onClick={this.showPassword}\n                      />\n                    </InputAdornment>\n                  )\n                }\n              />\n            </FormControl>\n            <Button\n              disabled={!this.isValid()}\n              disableRipple\n              fullWidth\n              variant=\"outlined\"\n              className={classes.button}\n              type=\"submit\"\n              onClick={this.submitRegistration}\n            >\n              Join\n            </Button>\n          </form>\n\n          {this.state.error ? (\n            <Snackbar\n              variant=\"error\"\n              key={this.state.error}\n              anchorOrigin={{\n                vertical: \"bottom\",\n                horizontal: \"center\"\n              }}\n              open={this.state.errorOpen}\n              onClose={this.errorClose}\n              autoHideDuration={3000}\n            >\n              <SnackbarContent\n                className={classes.error}\n                message={\n                  <div>\n                    <span style={{ marginRight: \"8px\" }}>\n                      <ErrorIcon fontSize=\"large\" color=\"error\" />\n                    </span>\n                    <span> {this.state.error} </span>\n                  </div>\n                }\n                action={[\n                  <IconButton\n                    key=\"close\"\n                    aria-label=\"close\"\n                    onClick={this.errorClose}\n                  >\n                  </IconButton>\n                ]}\n              />\n            </Snackbar>\n          ) : null}\n        </Paper>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch)=>{\n    return {\n        RegisterUser:(user)=>dispatch(authRegister(user))\n    }\n}\n\nexport default connect(null,mapDispatchToProps)(withStyles(register)(Registration));\n","/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/components/Registration/RegistrationStyles.js",[],"/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/store/index.js",[],"/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/store/reducers/auth.js",[],"/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/store/UpdateObj.js",[],"/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/store/constants/auth.js",[],"/home/daksh/HardDrive/WebD/Interview_Tracker/client/src/store/actions/auth.js",["71"],"import * as authActions from '../constants/auth.js'\nimport axios from 'axios'\n\nexport const authStart = () => {\n    return {\n        type: authActions.AUTH_START\n    }\n}\n\nexport const authSuccess = (data) => {\n    return {\n        type: authActions.AUTH_SUCCESS,\n        payload: data,\n    }\n}\n\nexport const authFail = (data) => {\n    return {\n        type: authActions.AUTH_FAIL,\n        payload: data,\n    }\n}\n\nconst authLogout = (state,action) => {\n    localStorage.removeItem(\"token\")\n    return {\n        type: authActions.AUTH_LOGOUT,\n    }\n}\n\n\n\n\nexport const authLogin = async ({username,password})=>{\n    return async (dispatch) =>{\n        dispatch(authStart()) ;\n        try {\n         let response = await axios.post(\"http://localhost:3001/api/accounts/login\",{username,password}) ;\n            let token = response.data.token;\n            localStorage.setItem(\"token\",token)\n            dispatch(authSuccess(token)) ;\n        }catch(err){\n            console.log(err.response.data) ;\n            dispatch(authFail(err.response.data))\n        }\n    }\n}\n\n\nexport const authRegister = async ({username,email,password})=>{\n\n    return async (dispatch) =>{\n            dispatch(authStart()) ;\n            try {\n            let response = await axios.post(\"http://localhost:3001/api/accounts/register\",{username,password}) ;\n                let token = response.data.token;\n                localStorage.setItem(\"token\",token)\n                dispatch(authSuccess(response)) ;\n            }catch(err){\n                console.log(err.response.data) ;\n                dispatch(authFail(err.response.data))\n            }\n        }\n}\n",{"ruleId":"72","severity":1,"message":"73","line":3,"column":8,"nodeType":"74","messageId":"75","endLine":3,"endColumn":13},{"ruleId":"76","severity":1,"message":"77","line":35,"column":3,"nodeType":"78","endLine":35,"endColumn":5,"suggestions":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"72","severity":1,"message":"84","line":8,"column":9,"nodeType":"74","messageId":"75","endLine":8,"endColumn":18},{"ruleId":"72","severity":1,"message":"85","line":33,"column":9,"nodeType":"74","messageId":"75","endLine":33,"endColumn":13},{"ruleId":"86","severity":1,"message":"87","line":8,"column":9,"nodeType":"88","endLine":8,"endColumn":88},{"ruleId":"72","severity":1,"message":"89","line":17,"column":8,"nodeType":"74","messageId":"75","endLine":17,"endColumn":13},{"ruleId":"72","severity":1,"message":"90","line":24,"column":7,"nodeType":"74","messageId":"75","endLine":24,"endColumn":17},"no-unused-vars","'Login' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'Topics'. Either include it or remove the dependency array.","ArrayExpression",["91"],"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"'useEffect' is defined but never used.","'bull' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'axios' is defined but never used.","'authLogout' is assigned a value but never used.",{"desc":"94","fix":"95"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [Topics]",{"range":"96","text":"97"},[956,958],"[Topics]"]